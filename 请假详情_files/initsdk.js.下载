define(function (require, exports, module) {
    var mapUtil = require('mapUtil');
    var obj = {
        init: function (callBack) {
            var self = this;
            var successFunc = function (sdk) {
                window.SDK = sdk;
                callBack();
            }
            var failFunc = function (err) {
                console.error("SDK初始化失败！" + JSON.stringify(err));
                window.SDK = self.getDefaultSDK();
                callBack();
            }
            if(WIS_CONFIG.needSDK!="1"){
            	failFunc("系统配置不需要SDK");
            	return;
            }
            /**
             * 判断父窗口中是否加载了SDK，如果加载了则直接使用父窗口的SDK
             * 这样写的原因：微信SDK在同一页面初始化两次会造成第二次初始化失败
             *               即使是iframe嵌套的页面也不行
             */
            if (window.parent && window.parent.SDK) {
                successFunc(window.parent.SDK);
                return;
            }
            var userAgent = navigator.userAgent.toLowerCase();
            if (/micromessenger/.test(userAgent)) {//微信客户端
                require(['weChatSDK'], function (obj) {
                    obj.init().then(successFunc).catch(failFunc);
                });
                return;
            } else if (/dingtalk/.test(userAgent)) {//钉钉客户端
                require(['dingTalkSDK'], function (obj) {
                    obj.init().then(successFunc).catch(failFunc);
                });
                return;
            } else if (/wisedu/.test(userAgent)) {//今日校园客户端
                require(['wiseduSDK'], function (obj) {
                    obj.init().then(successFunc).catch(failFunc);
                });
                return;
            } else if (/yiban/.test(userAgent)) {//易班客户端
                require(['yibanSDK'], function (obj) {
                    obj.init().then(successFunc).catch(failFunc);
                });
                return;
            } else {
                //如果二开扩展SDK，则使用ekSDK,否则默认使用wiseduSDK
                require(['ekSDK'], function (obj) {
                    obj.init().then(successFunc).catch(function () {
                        successFunc(self.getDefaultSDK());
                    });
                });
            }
        },
        getDefaultSDK:function(){
            return {
                isHybrid:false,
                //改变标题
                setTitleText: function (opt = '') {
                	document.title = opt;
                    console.log("设置页面标题:"+ opt);
                },
                //扫描二维码或者一维码
                scan: function () {                  
                    Vue.prototype.$xgDialog.alert({
                        title: "提示",
                        message:"该功能尚未开放使用！"
                    });
                    var dfd = $.Deferred();
                    dfd.reject("该功能尚未开放使用！");
                    return dfd.promise();
                },
                //获取当前位置
                getCurrentPosition:function () {
                    var dfd = $.Deferred();
                    mapUtil.initBMap().then(function () {
                        var geolocation = new BMap.Geolocation();
                        geolocation.getCurrentPosition(function (res) {
                            if (this.getStatus() == BMAP_STATUS_SUCCESS) {
                                res.longitude = res.point.lng;
                                res.latitude = res.point.lat;
                                dfd.resolve(res);
                            } else {
                                dfd.reject("定位失败");
                            }
                        });
                    },function (err) {
                        dfd.resolve(err);
                    });
                    return dfd.promise();
                },
                //预览图片
                preViewImages:function (options) {
                    Vue.prototype.$xgDialog.alert({
                        title: "提示",
                        message:"该功能尚未开放使用！"
                    });
                }
            };
        }
    };
    return obj;
});